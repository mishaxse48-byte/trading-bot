import os
import asyncio
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

TELEGRAM_TOKEN = os.environ.get("TELEGRAM_TOKEN")
TG_CHAT_ID = os.environ.get("TG_CHAT_ID")

sending_signals = False

async def signal_loop(app):
    """–§–æ–Ω–æ–≤–∏–π —Ü–∏–∫–ª –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è —Å–∏–≥–Ω–∞–ª—ñ–≤ –∫–æ–∂–Ω—ñ 10 —Ö–≤–∏–ª–∏–Ω"""
    while sending_signals:
        try:
            await app.bot.send_message(
                chat_id=int(TG_CHAT_ID),
                text="üîî –°–∏–≥–Ω–∞–ª –¥–ª—è —Ç–æ—Ä–≥—ñ–≤–ª—ñ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ!"
            )
        except Exception as e:
            print(f"–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è —Å–∏–≥–Ω–∞–ª—É: {e}")
        await asyncio.sleep(600)  # 10 —Ö–≤

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global sending_signals
    sending_signals = True
    chat_id = update.effective_chat.id
    await update.message.reply_text(f"–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ. –¢–≤—ñ–π chat_id: {chat_id}")
    await update.message.reply_text("–ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è —Å–∏–≥–Ω–∞–ª—ñ–≤ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ ‚úÖ")
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ñ–æ–Ω–æ–≤–∏–π —Ü–∏–∫–ª
    asyncio.create_task(signal_loop(context.application))

async def stop(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global sending_signals
    sending_signals = False
    await update.message.reply_text("–°–∏–≥–Ω–∞–ª–∏ –∑—É–ø–∏–Ω–µ–Ω–æ ‚õî")

def main():
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("stop", stop))
    app.run_polling()  # —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏–π –≤–∏–∫–ª–∏–∫

if __name__ == "__main__":
    main()
