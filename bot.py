import os
import asyncio
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# –¢–æ–∫–µ–Ω —Ç–∞ chat_id –∑ Environment Variables
TELEGRAM_TOKEN = os.environ.get("TELEGRAM_TOKEN")
TG_CHAT_ID = os.environ.get("TG_CHAT_ID")  # —á–∏—Å–ª–æ–≤–∏–π ID

# –ö–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è —Å–∏–≥–Ω–∞–ª—ñ–≤
sending_signals = False

async def send_signal(app):
    """–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –æ–¥–∏–Ω —Å–∏–≥–Ω–∞–ª"""
    if TG_CHAT_ID:
        await app.bot.send_message(chat_id=int(TG_CHAT_ID), text="üîî –°–∏–≥–Ω–∞–ª –¥–ª—è —Ç–æ—Ä–≥—ñ–≤–ª—ñ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ!")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global sending_signals
    chat_id = update.effective_chat.id
    await update.message.reply_text(f"–¢–≤—ñ–π chat_id: {chat_id}")

    if sending_signals:
        await update.message.reply_text("–°–∏–≥–Ω–∞–ª–∏ –≤–∂–µ –Ω–∞–¥—Å–∏–ª–∞—é—Ç—å—Å—è ‚è≥")
        return

    sending_signals = True
    await update.message.reply_text("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ. –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è 3 —Å–∏–≥–Ω–∞–ª—ñ–≤ –∫–æ–∂–Ω—ñ 3 —Ö–≤–∏–ª–∏–Ω–∏ ‚úÖ")

    for i in range(3):
        if not sending_signals:
            break  # –∑—É–ø–∏–Ω–∫–∞, —è–∫—â–æ /stop –Ω–∞—Ç–∏—Å–Ω—É—Ç–æ
        await send_signal(context.application)
        if i < 2:
            await asyncio.sleep(180)  # 3 —Ö–≤–∏–ª–∏–Ω–∏

    sending_signals = False
    await update.message.reply_text("–í—Å—ñ —Å–∏–≥–Ω–∞–ª–∏ –Ω–∞–¥—ñ—Å–ª–∞–Ω—ñ –∞–±–æ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –∑—É–ø–∏–Ω–µ–Ω–æ ‚õî")

async def stop(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global sending_signals
    sending_signals = False
    await update.message.reply_text("–ë–æ—Ç –∑—É–ø–∏–Ω–µ–Ω–æ. –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è —Å–∏–≥–Ω–∞–ª—ñ–≤ –≤–∏–º–∫–Ω–µ–Ω–æ ‚õî")

def main():
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("stop", stop))
    app.run_polling()  # –ª–∏—à–µ –æ–¥–∏–Ω –≤–∏–∫–ª–∏–∫

if __name__ == "__main__":
    main()
