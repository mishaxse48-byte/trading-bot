import logging
import os
import time
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞, –π–æ–≥–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏ —É Render —è–∫ TELEGRAM_TOKEN
TOKEN = os.environ.get("TELEGRAM_TOKEN")

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤—ñ—Ç üëã –Ø —Ç–≤—ñ–π –Ω–∞–≤—á–∞–ª—å–Ω–∏–π —Ç—Ä–µ–π–¥–∏–Ω–≥-–±–æ—Ç!")

# –¢–µ—Å—Ç–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è —Å–∏–≥–Ω–∞–ª—ñ–≤
async def signal_sender(application):
    while True:
        try:
            chat_id = os.environ.get("TG_CHAT_ID")
            if chat_id:
                await application.bot.send_message(chat_id=chat_id, text="üîî –¢–µ—Å—Ç–æ–≤–∏–π —Å–∏–≥–Ω–∞–ª: –ö—É–ø–∏—Ç–∏ EUR/USD")
            time.sleep(600)  # —á–µ–∫–∞—Ç–∏ 10 —Ö–≤–∏–ª–∏–Ω
        except Exception as e:
            print(f"–ü–æ–º–∏–ª–∫–∞: {e}")
            time.sleep(10)

def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))

    # –∑–∞–ø—É—Å–∫ —É —Ñ–æ–Ω–æ–≤–æ–º—É —Ä–µ–∂–∏–º—ñ
    app.post_init(signal_sender(app))

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π...")
    app.run_polling()

if __name__ == "__main__":
    main()
